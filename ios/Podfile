# Resolve react_native_pods.rb with node to allow for hoisting
use_frameworks! :linkage => :static

require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Astroself' do
  config = use_native_modules!

  # âœ… Enable Google Maps SDK for iOS
  # pod 'GoogleMaps'
  # pod 'Google-Maps-iOS-Utils'
  
  # Firebase Crashlytics
  pod 'Firebase/Crashlytics'



# rn_maps_path = '../node_modules/react-native-maps'
# pod 'react-native-maps/Google', :path => rn_maps_path

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true, # ðŸ‘ˆ enable Hermes if you want
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )

    # Fix Xcode 15/16 sandbox and non-modular includes issues for some pods (e.g., RNSVG, Hermes)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      end
    end
  end
end
